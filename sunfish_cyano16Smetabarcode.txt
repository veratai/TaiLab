## analysis of Sunfish Lake sediment core samples
## Irina Todoran, Irena Creed

## May 2020

## used cyano qPCR primers in metabarcoding of the 16S rRNA region that is amplified (not quite V4)
## unfortunately, indexes in metabarcoding were accidentally identical to ones used for ginseng soil 16S V4 sequencing (Alex Hick's samples)
## but since different target-specific primers were used, can separate them based on the primer sequences
## cyano F primer starts with ACG, and bac 16S V4 primer starts with GTG
## this is enough (do not need the whole primer) to search for and separate cyano seqs in the fastq files

## use this script (written by Alex Hicks) to write out fastq forward seqs, and paired reverse seqs, that start with ACG
cyano_16s_split.py


##check data quality using FastQC
## check some of them, do not have to do all
mkdir fastqc_out
fastqc -t 4 /data/seqarchive/sunfish_cyano16S_108F377R/file.fastq -o fastqc_out/

## trim adapters/primers from sequences

#trim off bad quality, and adapters from paired-end reads
#-q quality cutoff, 3' and 5' ends
#-n maximum number of times adapter will be removed
#-m minimum read length
#-e error-rate by default is 0.1, so for 20 nt primer allows for 2 mismatches
#-a 3' adapter on first read (= rev comp. of reverse primer (CYAN377R_VT = CCCATKGCGGAARATTCCCC)
#-A 3' adapter on paired read (= rev comp. of forward primer (CYAN108F = ACGGGTGAGTAACRCGTRA))

cutadapt -q 15,15 -n 1 -m 100 -a GGGGAATYTTCCGCMATGGG -A TYACGYGTTACTCACCCGT -o out1_cutadapt.fastq -p out2_cutadapt.fastq in1.fastq in2.fastq


#using qiime2

#activate qiime2 environment
source activate qiime2-2019.4

#enable tab completion
source tab-qiime

#to deactivate qiime
source deactivate

#import paired-end sequences, 2 files per sample (forward and reverse)
#need manifest file
#The manifest file is a comma-separated (i.e., .csv) text file. The first field on each line is the sample identifier that should be used by QIIME, the second field is the absolute filepath, and the third field is the read direction. 
#eg:
#sample-1,filepath/seqs.fastq.gz,forward
#sample-1,filepath/seqs.fastq.gz,reverse

#new format, tab-separated:
#sample-id     forward-absolute-filepath       reverse-absolute-filepath
#sample-1   filepath/seqs_R1.fastq.gz   filepath/seqs_R2.fastq.gz

qiime tools import \
  --type 'SampleData[SequencesWithQuality]' \
  --input-path manifestfile_sunfish_cyano16S.csv \
  --output-path paired-end-demux.qza \
  --source-format PairedEndFastqManifestPhred33V2

# or for single end data
qiime tools import \
  --type 'SampleData[SequencesWithQuality]' \
  --input-path manifestfile_sunfish_cyano16S.csv \
  --output-path mergedsingleend-sunfishcyano16S-demux.qza \
  --source-format PairedEndFastqManifestPhred33V2


qiime demux summarize \
  --i-data mergedsingleend-sunfishcyano16S-demux.qza \
  --o-visualization mergedsingleend-sunfishcyano16S-demux.qzv

#view/examine output, determine how much of 5' and 3' ends need to be trimmed based on quality cut-off
qiime tools view paired-end-demux.qzv
#look at interactive quality plot for seq quality for F and R reads

#trim seqs (de-noise), de-replicate, merge, remove chimeras using dada2 (https://benjjneb.github.io/dada2/index.html)
#do not trim so much for paired reads so that seqs do not merge anymore
#but probably will not have to trim much, because used cutadapt before to remove primer seqs and quality trim ends

qiime dada2 denoise-paired \
  --i-demultiplexed-seqs mergedsingleend-sunfishcyano16S-demux.qza \
  --o-table table_sunfish_cyano16S \
  --o-representative-sequences rep-seqs_sunfish_cyano16S \
  --p-trim-left-f 13 \
  --p-trim-left-r 13 \
  --p-trunc-len-f 150 \
  --p-trunc-len-r 150 \
  --p-n-threads 15
  

#generates table_sunfish_cyano16S.qza and rep-seqs_sunfish_cyano16S.qza files
#get/view summary of data
#now here need sample metadata table
#as tab-separated file, must have columns (?necessary if seqs already demultiplexed?):
#  #SampleID	BarcodeSequence	LinkerPrimerSequence

qiime feature-table summarize \
  --i-table table.qza \
  --o-visualization table.qzv \
  --m-sample-metadata-file sample-metadata.tsv

qiime tools view table.qzv

qiime feature-table tabulate-seqs \
  --i-data rep-seqs.qza \
  --o-visualization rep-seqs.qzv

qiime tools view rep-seqs.qzv

#generate phylogenetic tree
#align with mafft
qiime alignment mafft \
  --i-sequences rep-seqs.qza \
  --o-alignment aligned-rep-seqs.qza

#mask highly variable sites
qiime alignment mask \
  --i-alignment aligned-rep-seqs.qza \
  --o-masked-alignment masked-aligned-rep-seqs.qza

#generate tree with FastTree
qiime phylogeny fasttree \
  --i-alignment masked-aligned-rep-seqs.qza \
  --o-tree unrooted-tree.qza

#apply midpoint rooting
qiime phylogeny midpoint-root \
  --i-tree unrooted-tree.qza \
  --o-rooted-tree rooted-tree.qza

#calculate alpha and beta diversity metrics
#choose p-sampling-depth based on #reads per sample, as seen is table.qzv

qiime diversity core-metrics-phylogenetic \
  --i-phylogeny rooted-tree.qza \
  --i-table table.qza \
  --p-sampling-depth 1109 \
  --m-metadata-file sample-metadata.tsv \
  --output-dir core-metrics-results

#can do stats analyses on these results

#taxonomic analysis

#need trained dataset

qiime feature-classifier classify-sklearn \
  --i-classifier gg-13-8-99-515-806-nb-classifier.qza \
  --i-reads rep-seqs.qza \
  --o-classification taxonomy.qza

qiime metadata tabulate \
  --m-input-file taxonomy.qza \
  --o-visualization taxonomy.qzv

#generate taxonomy bar plots

qiime taxa barplot \
  --i-table table.qza \
  --i-taxonomy taxonomy.qza \
  --m-metadata-file sample-metadata.tsv \
  --o-visualization taxa-bar-plots.qzv


#use qiime tools export to export data out of qiime
#eg. to export table into BIOM v2.1.0 format

qiime tools export \
  feature-table.qza \
  --output-dir exported-feature-table

#eg. to export newick tree
qiime tools export \
  unrooted-tree.qza \
  --output-dir exported-tree



